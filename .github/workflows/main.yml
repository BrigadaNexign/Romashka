name: Java CI with Build, Test, Jacoco and SonarQube
on:
  push:
    branches:
      - main, dev
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build, Test, Analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'
      
      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      
      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      
      - name: Build and run tests with coverage
        run: |
          ./gradlew clean test jacocoTestReport
          # Проверяем что отчёт создался
          ls -la build/reports/jacoco/test/
          ls -la build/jacoco/
      
      - name: SonarQube analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          # Критически важные настройки для SonarQube
          SONAR_COVERAGE_JACOCO_XML_REPORT_PATHS: build/reports/jacoco/test/jacocoTestReport.xml
        run: |
          echo "Running SonarQube analysis with Jacoco report from: $SONAR_COVERAGE_JACOCO_XML_REPORT_PATHS"
          ./gradlew sonar \
            -Dsonar.coverage.jacoco.xmlReportPaths=$SONAR_COVERAGE_JACOCO_XML_REPORT_PATHS \
            --info
      
      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: coverage-reports
          path: |
            build/reports/jacoco/
            build/jacoco/
          if-no-files-found: warn
