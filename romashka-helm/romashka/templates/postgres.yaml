apiVersion: v1
kind: Service
metadata:
  name: postgres
  labels:
    {{- include "romashka.labels" . | nindent 4 }}
spec:
  clusterIP: None
  selector:
    app: postgres
  ports:
    - name: psql
      port: 5432
      targetPort: 5432
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  labels:
    {{- include "romashka.labels" . | nindent 4 }}
spec:
  serviceName: postgres
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
        {{- include "romashka.labels" . | nindent 8 }}
    spec:
      containers:
        - name: postgres
          image: {{ .Values.images.postgres }}
          imagePullPolicy: {{ .Values.pullPolicy }}
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_USER
              valueFrom: { secretKeyRef: { name: {{ include "romashka.fullname" . }}-secrets, key: POSTGRES_USER } }
            - name: POSTGRES_PASSWORD
              valueFrom: { secretKeyRef: { name: {{ include "romashka.fullname" . }}-secrets, key: POSTGRES_PASSWORD } }
            - name: POSTGRES_DB
              valueFrom: { secretKeyRef: { name: {{ include "romashka.fullname" . }}-secrets, key: POSTGRES_DB } }
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
          resources:
            {{- toYaml .Values.postgres.resources | nindent 12 }}
  volumeClaimTemplates:
    - metadata: { name: data }
      spec:
        accessModes: ["ReadWriteOnce"]
        {{- if .Values.postgres.storage.storageClassName }}
        storageClassName: {{ .Values.postgres.storage.storageClassName | quote }}
        {{- end }}
        resources: { requests: { storage: {{ .Values.postgres.storage.size }} } }
