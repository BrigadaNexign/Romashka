apiVersion: v1
kind: Service
metadata:
  name: zookeeper
  labels:
    {{- include "romashka.labels" . | nindent 4 }}
spec:
  clusterIP: None
  selector:
    app: zookeeper
  ports:
    - name: client
      port: 2181
      targetPort: 2181
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: zookeeper
  labels:
    {{- include "romashka.labels" . | nindent 4 }}
spec:
  serviceName: zookeeper
  replicas: {{ .Values.zookeeper.replicas }}
  selector:
    matchLabels:
      app: zookeeper
  template:
    metadata:
      labels:
        app: zookeeper
        {{- include "romashka.labels" . | nindent 8 }}
    spec:
      containers:
        - name: zookeeper
          image: {{ .Values.images.zookeeper }}
          imagePullPolicy: {{ .Values.pullPolicy }}
          env:
            - name: ZOOKEEPER_CLIENT_PORT
              value: "2181"
            - name: ZOOKEEPER_TICK_TIME
              value: "2000"
          ports:
            - containerPort: 2181
          volumeMounts:
            - name: data
              mountPath: /var/lib/zookeeper/data
            - name: log
              mountPath: /var/lib/zookeeper/log
          resources:
            {{- toYaml .Values.zookeeper.resources | nindent 12 }}
  volumeClaimTemplates:
    - metadata: { name: data }
      spec:
        accessModes: ["ReadWriteOnce"]
        {{- if .Values.zookeeper.storage.storageClassName }}
        storageClassName: {{ .Values.zookeeper.storage.storageClassName | quote }}
        {{- end }}
        resources: { requests: { storage: {{ .Values.zookeeper.storage.size }} } }
    - metadata: { name: log }
      spec:
        accessModes: ["ReadWriteOnce"]
        {{- if .Values.zookeeper.storage.storageClassName }}
        storageClassName: {{ .Values.zookeeper.storage.storageClassName | quote }}
        {{- end }}
        resources: { requests: { storage: {{ .Values.zookeeper.storage.size }} } }
