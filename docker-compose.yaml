services:
  postgres:
    image: 'postgres:latest'
    container_name: postgres_db
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - '54320:5432'
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER:-admin} -d ${DB_NAME:-app_db}" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - romashka-network

  rabbitmq:
    image: rabbitmq:3.10.7-management
    hostname: rabbitmq
    container_name: rabbitmq
    volumes:
      - ./infrastructure/rabbitmq/definitions.json:/etc/rabbitmq/definitions.json
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
      RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS: '-rabbitmq_management load_definitions "/etc/rabbitmq/definitions.json"'
    ports:
      - "5672:5672"  # AMQP
      - "15672:15672"  # Web UI (management plugin)
    networks:
      - romashka-network
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 10s
      timeout: 5s
      retries: 5

  # Liquibase (применяет миграции к PostgreSQL)
  liquibase:
    image: liquibase/liquibase
    container_name: liquibase
    volumes:
      - ./resources/db/changelog/changelog_master.xml:/liquibase/changelog_master.xml
      - ./resources/db/changelog/v.0.0.1:/liquibase/v.0.0.1
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - romashka-network
    command: --url="jdbc:postgresql://postgres_db:5432/users_db" --username=admin --password=admin --changeLogFile=changelog_master.xml update

  cdr:
    build: CDR/
    container_name: cdr
    depends_on:
      - postgres
      - rabbitmq
      - liquibase
    networks:
      - romashka-network
    ports:
      - "8080:8080"

  brt:
    build: BRT/
    container_name: brt
    depends_on:
      - postgres
      - rabbitmq
      - liquibase
      - cdr
    networks:
      - romashka-network
    ports:
      - "8081:8081"

networks:
  romashka-network:
    driver: bridge

volumes:
  db-data: